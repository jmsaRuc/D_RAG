volumes:
    langgraph-data:
        driver: local

# Shared configuration for all crawl4ai environments
x-base-config: &base-config
  ports:
    - "11235:11235"  # Gunicorn port
  volumes:
    - /dev/shm:/dev/shm  # Chromium performance
    - ./crawl4ai_server_config.yml:/app/config.yml
  restart: unless-stopped
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:11235/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s
  user: "appuser"

services:
    langgraph-redis:
        image: redis:6
        command: --port 6380
        ports:
            - "6380:6380"
        healthcheck:
            test: redis-cli -p 6380 ping
            interval: 5s
            timeout: 1s
            retries: 5

    langgraph-postgres:
        image: postgres:16
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - langgraph-data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 5s
    langgraph-api:
        build:
            context: ./
            dockerfile: ./lanchain-api.Dockerfile
        image: ollama-deep-researcher:0.0.2
        restart: always
        ports:
            - "2024:2024"                                      #<===== NOTE this change
        depends_on:
            langgraph-redis:
                condition: service_healthy
            langgraph-postgres:
                condition: service_healthy
            crawl4ai:
                condition: service_healthy
        environment:
            REDIS_URI: redis://langgraph-redis:6380
            LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
            POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable
            LLM_PROVIDER: ${LLM_PROVIDER}
            OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
            TAVILY_API_KEY: ${TAVILY_API_KEY}
            MAX_WEB_RESEARCH_LOOPS: ${MAX_WEB_RESEARCH_LOOPS}
            FETCH_FULL_PAGE: ${FETCH_FULL_PAGE}
            SEARCH_API: ${SEARCH_API}
            LOCAL_LLM: ${LOCAL_LLM}
            GROQ_API_KEY: ${GROQ_API_KEY}
            GROQ_LLM: ${GROQ_LLM}
            GROQ_API_BASE: ${GROQ_API_BASE}
            CRAWL_API_BASE: http://crawl4ai:11235
    crawl4ai:
        # 1. Default: Pull multi-platform test image from Docker Hub
        # 2. Override with local image via: IMAGE=local-test docker compose up --build
        image: ${CRAWL_IMAGE:-unclecode/crawl4ai:${CRAWL_TAG:-latest}}
        build:
            context: ./crawl4ai
            dockerfile: Dockerfile
            args:
                INSTALL_TYPE: ${INSTALL_TYPE:-default}
                ENABLE_GPU: ${ENABLE_GPU:-false}
        <<: *base-config
    nginx-reverse-proxy:
        build:
            context: ./
            dockerfile: ./nginx-linker.Dockerfile
        image: nginx-linker:0.0.2                    #<========NOTE change your Docker build tag if you change this!
        ports:
          - "8123:8123"
        volumes:
          - ./nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
          - langgraph-api